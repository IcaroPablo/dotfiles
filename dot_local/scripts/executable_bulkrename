#!/bin/ksh

# cmd bulkrename !printf "%s\n" $fx | sed 's,.*/,,' | bulkrename
# define a custom 'rename' command without prompt for overwrite
# cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
# cmd rename %{{
# 	filename="$(echo $*)"
# 	[ -e "$filename" ] && printf "file exists" || mv "$f" "$filename"
# }}

# map i rename  # Before extension
# map A push i<a-A>  # At the very end
# map cc push i<a-A><c-u>  # New rename
# map I push i<c-a>  # At the very beginning
# map a push i<a-A><a-b>  # After extension
# map b $vidir   # Bulkrename in $EDITOR, 'vidir' from more-utils
# map B $find | vidir -

# todo: editar apenas os itens selecionados, nÃ£o todos da pasta

tmpfile_old="$(mktemp)"
tmpfile_new="$(mktemp)"

[ -n "$@" ] && fs=$(basename -a $fs) || fs=$(ls)

echo "$fs" > "$tmpfile_old"
echo "$fs" > "$tmpfile_new"
$EDITOR "$tmpfile_new"

[ "$(wc -l < "$tmpfile_old")" -eq "$(wc -l < "$tmpfile_new")" ] || { rm -f "$tmpfile_old" "$tmpfile_new"; exit 1; }

paste "$tmpfile_old" "$tmpfile_new" | while IFS="$(printf '\t')" read -r src dst
do
    [ "$src" = "$dst" ] || [ -e "$dst" ] || mv -- "$src" "$dst"
done

rm -f "$tmpfile_old" "$tmpfile_new"
lf -remote "send $id unselect"
